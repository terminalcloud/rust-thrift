///////////////////////////////////////////////////////////////
// Autogenerated by Thrift Compiler (1.0.0-dev)
//
// DO NOT EDIT UNLESS YOU ARE SURE YOU KNOW WHAT YOU ARE DOING
///////////////////////////////////////////////////////////////

#![allow(unused_mut, dead_code, non_snake_case)]
#[allow(unused_imports)]
use std::collections::{HashMap, HashSet};


strukt! {
  name = SharedStruct,
  fields = {
    key: i32 => 1,
    value: String => 2,
  }
}

service! {
  trait_name = SharedService,
  processor_name = SharedServiceProcessor,
  client_name = SharedServiceClient,
  service_methods = [
    SharedServiceGetStructArgs -> SharedServiceGetStructResult = a.getStruct(
      key: i32 => 1,
    ) -> SharedStruct,
  ],
  parent_methods = [
  ],
  bounds = [A: SharedService, ],
  fields = [a: A, ]
}

